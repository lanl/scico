# Install scico requirements and run pytest with latest jax version

name: Unit tests with latest jax

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  pytest-latest-jax:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install lastversion
          rjaxlib=$(grep jaxlib== requirements.txt | sed 's/jaxlib==//')
          rjax=$(grep jax== requirements.txt | sed 's/jax==//')
          ljaxlib=$(lastversion --at pip jaxlib)
          ljax=$(lastversion --at pip jax)
          echo jaxlib  required: $rjaxlib  latest: $ljaxlib
          echo jax     required: $rjax  latest: $ljax
          if [ "$rjaxlib" = "$ljaxlib" ] && [ "$rjax" = "$ljax" ]; then
            echo Test is redundant: required and latest jaxlib/jax versions match
            export TEST="cancel"
            echo "::set-env name=TEST::$TEST"
          else
            export TEST="run"
            echo "::set-env name=TEST::$TEST"
            sudo apt-get install -y libopenblas-dev
            pip install -r requirements.txt
            pip install -r dev_requirements.txt
            pip install -e .
            pip install --upgrade "jax[cpu]"
          fi
      - name: Run tests with pytest
        run: |
          if [ "$TEST" = "run" ]; then
            pytest
          else
            exit 0
          fi
